// Generated by CoffeeScript 1.6.2
(function() {
  var interval, obs, revive, time, timeout, uuid;

  timeout = {
    set: function(ms, fn) {
      return setTimeout(fn, ms);
    },
    clear: function(t) {
      return clearTimeout(t);
    }
  };

  interval = {
    set: function(ms, fn) {
      return setInterval(fn, ms);
    },
    clear: function(i) {
      return clearInterval(i);
    }
  };

  revive = function(key, value) {
    var cl;

    if (value["class"] && (cl = window[value["class"]] || revive.constructors[value["class"]]) && typeof cl.fromJSON === "function") {
      return cl.fromJSON(value);
    } else {
      return value;
    }
  };

  obs = function(value, owner) {
    switch (false) {
      case !(value && (value.call || value.read || value.write)):
        return ko.computed(value);
      case !(value && value.map):
        return ko.observableArray(value, owner || this);
      default:
        return ko.observable(value);
    }
  };

  uuid = (function() {
    var id, ids;

    ids = [];
    id = function(a) {
      if (a) {
        return (a ^ Math.random() * 16 >> a / 4).toString(16);
      } else {
        return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, id);
      }
    };
    return function() {
      var e;

      while (true) {
        e = id();
        if (!~ids.indexOf(e)) {
          break;
        }
      }
      ids.push(e);
      return e;
    };
  })();

  time = (function() {
    var a;

    a = obs(0);
    interval.set(1e3, function() {
      return a(new Date);
    });
    return a;
  })();

}).call(this);
