// Generated by CoffeeScript 1.6.2
/*
* @class Node
*/


(function() {
  var Node,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Node = (function() {
    function Node(options) {
      this.editTags = __bind(this.editTags, this);
      var _this = this;

      this.smplnt = options.smplnt;
      this.id = options.id || uuid();
      this.parent = obs((options.parent && options.parent.id) || options.parent);
      if (this.parent() === null) {
        this.smplnt.root = this;
      }
      this.title = obs(options.title || "");
      this.title.extend({
        parse: Node.parseHeadline
      });
      this.note = obs(options.note || "");
      this.note.extend({
        parse: Node.parseNote
      });
      this.deadline = obs(options.deadline != null ? new Date(o.deadline) : false);
      this.bookmarked = obs(options.bookmarked || false);
      this.done = obs(options.done || false);
      this.expanded = obs(options.expanded || false);
      this.listStyleType = obs(options.listStyleType || []);
      this.position = obs(options.position || 0);
      this.activeTitle = obs(false);
      this.activeNote = obs(false);
      this.selected = obs(false);
      this.current = obs(false);
      this.tags = obs([]);
      this.tags.extend({
        pickFrom: {
          array: this.smplnt.tags,
          key: "name"
        }
      });
      this.files = obs([]);
      this.children = obs([]);
      this.hasNote = obs(function() {
        return _this.note().length;
      });
      this.hasChildren = obs(function() {
        return _this.children.length;
      });
      this.cssClass = obs(function() {
        return _this.listStyleType().concat("node").filter(Boolean).join(" ");
      });
      this.bullet = obs(function() {
        return (_this.hasNote() || _this.hasChildren) && (!_this.expanded() && "&#9658;" || _this.expanded() && "&#9660") || "&9679;";
      });
      this.deadlineDisplay = obs(function() {
        var d;

        time();
        d = _this.deadline();
        if (d === !null) {
          if (d > new Date) {
            return moment(d).fromNow();
          } else {
            return _this.alarm();
          }
        } else {
          return "";
        }
      });
    }

    Node.prototype.alarm = function() {
      this.deadline(null);
      this.smplnt.pop.play();
      alert(this.title());
      return "";
    };

    Node.prototype.editTags = function(n, e) {
      return $("#tagsMenu").trigger("position", e.target.on("menuselect", function(e, ui) {
        if (!(ui && ui.item)) {
          return;
        }
        if (!this.tags.remove(ui.item)) {
          return this.tags.push(ui.item);
        }
      }));
    };

    return Node;

  })();

  (window || exports).Node = Node;

}).call(this);
